From cbba5a39823c74a73bd6ccc5930ea925532bfd99 Mon Sep 17 00:00:00 2001
From: Tony Camuso <tcamuso@redhat.com>
Date: Sun, 6 Nov 2016 08:27:18 -0500
Subject: [RHEL7.3 1/1] make - add argument to build kabitools database

Pursuant to our tech-talk on kabi tools, here is a patch to the RHEL kernel
make that adds an argument to initiate a build of the database for the
kabitools.

Slides for the tech talk are available here:
http://people.redhat.com/tcamuso/kabitools/doc/kabitools.odp

In order to use of the kabi-lookup tool, you will need to install the
kabitools rpm that corresponds to your distro, which you can find at
http://people.redhat.com/tcamuso/kabitools/

Sources for the kit are at https://github.com/camuso/kabitools

The argument to the kernel make to build the kabi tool database is 'K=1',
and 'make help' has an entry for it.

If the kabitools have not been installed, this argument is ignored.

Without 'K=1' the make proceeds as normal without creating the database.

'make clean' removes all the database files.

There were also changes to .gitignore at the top level.

Signed-off-by: Tony Camuso <tcamuso@redhat.com>
---
 .gitignore             |  1 +
 Makefile               | 17 +++++++++++++++--
 scripts/Makefile.build | 17 +++++++++++++++++
 3 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/.gitignore b/.gitignore
index c2ed4ec..90be165 100644
--- a/.gitignore
+++ b/.gitignore
@@ -100,6 +100,7 @@ ID
 *~
 \#*#
 
+*.kb_dat
 #
 # Leavings from module signing
 #
diff --git a/Makefile b/Makefile
index 80b8671..bb2d82d 100644
--- a/Makefile
+++ b/Makefile
@@ -96,6 +96,16 @@ endif
 
 export quiet Q KBUILD_VERBOSE
 
+# Call the kabiparser to create a graph for each c file in the build.
+# Use 'make K=1' to invoke the kabiparser during the build.
+
+ifeq ("$(origin K)", "command line")
+  KBUILD_KABIPARSER = $(K)
+endif
+ifndef KBUILD_KABIPARSER
+  KBUILD_KABIPARSER = 0
+endif
+
 # kbuild supports saving output files in a separate directory.
 # To locate output files in a separate directory two syntaxes are supported.
 # In both cases the working directory must be the root of the kernel src.
@@ -337,7 +347,7 @@ ifeq ($(MAKECMDGOALS),)
 endif
 
 export KBUILD_MODULES KBUILD_BUILTIN
-export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD
+export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD KBUILD_KABIPARSER
 
 # We need some generic definitions (do not try to remake the file).
 scripts/Kbuild.include: ;
@@ -360,6 +370,7 @@ DEPMOD		= /sbin/depmod
 PERL		= perl
 PYTHON		= python
 CHECK		= sparse
+KABIPARSER 	= $(shell if [ -x "/usr/sbin/kabi-parser" ]; then echo kabi-parser; fi)
 
 CHECKFLAGS     := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ \
 		  -Wbitwise -Wno-return-void $(CF)
@@ -415,7 +426,7 @@ KERNELVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(S
 export VERSION PATCHLEVEL SUBLEVEL KERNELRELEASE KERNELVERSION
 export ARCH SRCARCH CONFIG_SHELL HOSTCC HOSTCFLAGS CROSS_COMPILE AS LD CC
 export CPP AR NM STRIP OBJCOPY OBJDUMP
-export MAKE AWK GENKSYMS INSTALLKERNEL PERL PYTHON UTS_MACHINE
+export MAKE AWK GENKSYMS INSTALLKERNEL PERL PYTHON UTS_MACHINE KABIPARSER
 export HOSTCXX HOSTCXXFLAGS LDFLAGS_MODULE CHECK CHECKFLAGS
 
 export KBUILD_CPPFLAGS NOSTDINC_FLAGS LINUXINCLUDE OBJCOPYFLAGS LDFLAGS
@@ -1404,6 +1415,7 @@ help:
 	@echo  '		2: warnings which occur quite often but may still be relevant'
 	@echo  '		3: more obscure warnings, can most likely be ignored'
 	@echo  '		Multiple levels can be combined with W=12 or W=123'
+	@echo  '  make K=1   [targets] Build kabitools database.'
 	@echo  ''
 	@echo  'Execute "make" or "make all" to build all targets marked with [*] '
 	@echo  'For further info see the ./README file'
@@ -1517,6 +1529,7 @@ clean: $(clean-dirs)
 	$(call cmd,rmfiles)
 	@find $(if $(KBUILD_EXTMOD), $(KBUILD_EXTMOD), .) $(RCS_FIND_IGNORE) \
 		\( -name '*.[oas]' -o -name '*.ko' -o -name '.*.cmd' \
+		-o -name '*.i' -o -name '*.kb_dat' -o -name 'kabi-datafiles.*' \
 		-o -name '*.ko.*' \
 		-o -name '*.dwo'  \
 		-o -name '*.su'  \
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index 11602e5..f637173 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -30,6 +30,9 @@ ldflags-y  :=
 subdir-asflags-y :=
 subdir-ccflags-y :=
 
+KABIDATADIR	= redhat/kabi
+KABIDATAFILE	= $(KABIDATADIR)/kabi-datafiles.list
+
 # Read auto.conf if it exists, otherwise ignore
 -include include/config/auto.conf
 
@@ -158,6 +161,16 @@ cmd_cpp_i_c       = $(CPP) $(c_flags) -o $@ $<
 $(obj)/%.i: $(src)/%.c FORCE
 	$(call if_changed_dep,cpp_i_c)
 
+ifeq ($(KBUILD_KABIPARSER),1)
+    cmd_kabiparser = 					\
+	$(CPP) $(c_flags) -o $(1) $<;			\
+	$(KABIPARSER) -xo $(2) -f $(1) -S -Wall_off;	\
+	test -e $(2) && echo $(2) >> $(KABIDATAFILE);	\
+	rm -f $(1);
+else
+    cmd_kabiparser = echo -n;
+endif
+
 cmd_gensymtypes =                                                           \
     $(CPP) -D__GENKSYMS__ $(c_flags) $< |                                   \
     $(GENKSYMS) $(if $(1), -T $(2))                                         \
@@ -202,6 +215,10 @@ cmd_modversions =								\
 		$(call cmd_gensymtypes,$(KBUILD_SYMTYPES),$(@:.o=.symtypes))	\
 		    > $(@D)/.tmp_$(@F:.o=.ver);					\
 										\
+		if [ "$(KABIPARSER)" ]; then					\
+			$(call cmd_kabiparser,$(@:.o=.i),$(@:.o=.kb_dat))	\
+		fi;								\
+										\
 		$(LD) $(LDFLAGS) -r -o $@ $(@D)/.tmp_$(@F) 			\
 			-T $(@D)/.tmp_$(@F:.o=.ver);				\
 		rm -f $(@D)/.tmp_$(@F) $(@D)/.tmp_$(@F:.o=.ver);		\
-- 
2.7.4

