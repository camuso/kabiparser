From 42e69540cd117859e49c1d7b0cf20fc86bf3ce3c Mon Sep 17 00:00:00 2001
From: Tony Camuso <tcamuso@redhat.com>
Date: Thu, 24 Sep 2015 09:01:40 -0400
Subject: [RHEL7.4 1/1] RFC: [RHEL7 PATCH] make - add argument to build
 kabitools database

Pursuant to our tech-talk on kabi tools, here is a patch to the RHEL kernel
make that adds an argument to initiate a build of the database for the
kabitools.

Slides for the tech talk are available here:
http://people.redhat.com/tcamuso/kabitools/doc/kabitools.odp

In order to use of the kabi-lookup tool, you will need to install
http://people.redhat.com/tcamuso/kabitools/kabitools-3.5-0.el7.x86_64.rpm

Sources for the kit are at https://github.com/camuso/kabitools

The argument to the kernel make to build the kabi tool database is 'K=1',
and 'make help' has an entry for it.

If the kabitools have not been installed, this argument is ignored.

Without 'K=1' the make proceeds as normal without creating the database.

'make clean' removes all the database files.

There were also changes to .gitignore at the top level and in the redhat
directory.

Signed-off-by: Tony Camuso <tcamuso@redhat.com>

CC: prarit@redhat.com
CC: dzickus@redhat.om
CC: linville@redhat.com
CC: ddutile@redhat.com
Signed-off-by: Tony Camuso <tcamuso@redhat.com>
---
 .gitignore             |  1 +
 Makefile               | 17 +++++++++++++++--
 redhat/.gitignore      |  1 +
 scripts/Makefile.build | 17 +++++++++++++++++
 4 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/.gitignore b/.gitignore
index f73f35f..13a3e04 100644
--- a/.gitignore
+++ b/.gitignore
@@ -100,6 +100,7 @@ x509.genkey
 #
 configs/*.config
 localversion
+*.kbg
 
 # configuration file for rh- targets
 .rhel7git.mk
diff --git a/Makefile b/Makefile
index 1c54427..dfea585 100644
--- a/Makefile
+++ b/Makefile
@@ -86,6 +86,16 @@ ifeq ("$(origin M)", "command line")
   KBUILD_EXTMOD := $(M)
 endif
 
+# Call the kabiparser to create a graph for each c file in the build.
+# Use 'make K=1' to invoke the kabiparser during the build.
+
+ifeq ("$(origin K)", "command line")
+  KBUILD_KABIPARSER = $(K)
+endif
+ifndef KBUILD_KABIPARSER
+  KBUILD_KABIPARSER = 0
+endif
+
 # kbuild supports saving output files in a separate directory.
 # To locate output files in a separate directory two syntaxes are supported.
 # In both cases the working directory must be the root of the kernel src.
@@ -291,7 +301,7 @@ ifeq ($(MAKECMDGOALS),)
 endif
 
 export KBUILD_MODULES KBUILD_BUILTIN
-export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD
+export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD KBUILD_KABIPARSER
 
 # Beautify output
 # ---------------------------------------------------------------------------
@@ -358,6 +368,7 @@ INSTALLKERNEL  := installkernel
 DEPMOD		= /sbin/depmod
 PERL		= perl
 CHECK		= sparse
+KABIPARSER 	= $(shell if [ -x "/usr/sbin/kabi-parser" ]; then echo kabi-parser; fi)
 
 CHECKFLAGS     := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ \
 		  -Wbitwise -Wno-return-void $(CF)
@@ -422,7 +433,7 @@ KERNELVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(S
 export VERSION PATCHLEVEL SUBLEVEL KERNELRELEASE KERNELVERSION
 export ARCH SRCARCH CONFIG_SHELL HOSTCC HOSTCFLAGS CROSS_COMPILE AS LD CC
 export CPP AR NM STRIP OBJCOPY OBJDUMP
-export MAKE AWK GENKSYMS INSTALLKERNEL PERL UTS_MACHINE
+export MAKE AWK GENKSYMS INSTALLKERNEL PERL UTS_MACHINE KABIPARSER
 export HOSTCXX HOSTCXXFLAGS LDFLAGS_MODULE CHECK CHECKFLAGS
 
 export KBUILD_CPPFLAGS NOSTDINC_FLAGS LINUXINCLUDE OBJCOPYFLAGS LDFLAGS
@@ -1236,6 +1247,7 @@ help:
 	@echo  '		2: warnings which occur quite often but may still be relevant'
 	@echo  '		3: more obscure warnings, can most likely be ignored'
 	@echo  '		Multiple levels can be combined with W=12 or W=123'
+	@echo  '  make K=1   [targets] Build kabitools database.'
 	@echo  ''
 	@echo  'Execute "make" or "make all" to build all targets marked with [*] '
 	@echo  'For further info see the ./README file'
@@ -1349,6 +1361,7 @@ clean: $(clean-dirs)
 		-o -name '.*.d' -o -name '.*.tmp' -o -name '*.mod.c' \
 		-o -name '*.symtypes' -o -name 'modules.order' \
 		-o -name modules.builtin -o -name '.tmp_*.o.*' \
+		-o -name '*.i' -o -name '*.kbg' -o -name 'kabi-datafiles.*' \
 		-o -name '*.gcno' \) -type f -print | xargs rm -f
 
 # Generate tags for editors
diff --git a/redhat/.gitignore b/redhat/.gitignore
index 6ea87b3..11f12d2 100644
--- a/redhat/.gitignore
+++ b/redhat/.gitignore
@@ -9,3 +9,4 @@ kabi/Module.kabi_x86_64
 kabi/kabi-current
 kabi/kabi-rhel7?
 kabi/kabi-rhel7?/*
+kabi/kabi-datafiles.list
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index 61527b0..bb233e7 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -30,6 +30,9 @@ ldflags-y  :=
 subdir-asflags-y :=
 subdir-ccflags-y :=
 
+KABIDATADIR	= redhat/kabi
+KABIDATAFILE	= $(KABIDATADIR)/kabi-datafiles.list
+
 # Read auto.conf if it exists, otherwise ignore
 -include include/config/auto.conf
 
@@ -209,6 +212,16 @@ cmd_cc_i_c       = $(CPP) $(c_flags)   -o $@ $<
 $(obj)/%.i: $(src)/%.c FORCE
 	$(call if_changed_dep,cc_i_c)
 
+ifeq ($(KBUILD_KABIPARSER),1)
+    cmd_kabiparser = 					\
+	$(CPP) $(c_flags) -o $(1) $<;			\
+	$(KABIPARSER) -xo $(2) -f $(1) -S -Wall_off;	\
+	test -e $(2) && echo $(2) >> $(KABIDATAFILE);	\
+	rm -f $(1);
+else
+    cmd_kabiparser = echo -n;
+endif
+
 cmd_gensymtypes =                                                           \
     $(CPP) -D__GENKSYMS__ $(c_flags) $< |                                   \
     $(GENKSYMS) $(if $(1), -T $(2))                                         \
@@ -253,6 +266,10 @@ cmd_modversions =								\
 		$(call cmd_gensymtypes,$(KBUILD_SYMTYPES),$(@:.o=.symtypes))	\
 		    > $(@D)/.tmp_$(@F:.o=.ver);					\
 										\
+		if [ "$(KABIPARSER)" ]; then					\
+			$(call cmd_kabiparser,$(@:.o=.i),$(@:.o=.kbg))	\
+		fi;								\
+										\
 		$(LD) $(LDFLAGS) -r -o $@ $(@D)/.tmp_$(@F) 			\
 			-T $(@D)/.tmp_$(@F:.o=.ver);				\
 		rm -f $(@D)/.tmp_$(@F) $(@D)/.tmp_$(@F:.o=.ver);		\
-- 
1.8.3.1

