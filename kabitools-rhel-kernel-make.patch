From 19fccd807c12721aa3870a088610e16b5650a837 Mon Sep 17 00:00:00 2001
From: Tony Camuso <tcamuso@redhat.com>
Date: Mon, 20 May 2019 15:09:48 -0400
Subject: [RHEL7.7 BZ-1517616] RHEL7 make patch for kabitools

	modified:   .gitignore
	modified:   Makefile
	modified:   redhat/.gitignore
	modified:   scripts/Makefile.build

Signed-off-by: Tony Camuso <tcamuso@redhat.com>
---
 .gitignore             |  1 +
 Makefile               | 17 +++++++++++++++--
 redhat/.gitignore      |  1 +
 scripts/Makefile.build | 17 +++++++++++++++++
 4 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/.gitignore b/.gitignore
index 01f4d91..aa471d9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -101,6 +101,7 @@ x509.genkey
 #
 configs/*.config
 localversion
+*.kbg
 
 # configuration file for rh- targets
 .rhel7git.mk
diff --git a/Makefile b/Makefile
index 339033b..2de2a17 100644
--- a/Makefile
+++ b/Makefile
@@ -86,6 +86,16 @@ ifeq ("$(origin M)", "command line")
   KBUILD_EXTMOD := $(M)
 endif
 
+# Call the kabiparser to create a graph for each c file in the build.
+# Use 'make K=1' to invoke the kabiparser during the build.
+
+ifeq ("$(origin K)", "command line")
+  KBUILD_KABIPARSER = $(K)
+endif
+ifndef KBUILD_KABIPARSER
+  KBUILD_KABIPARSER = 0
+endif
+
 # kbuild supports saving output files in a separate directory.
 # To locate output files in a separate directory two syntaxes are supported.
 # In both cases the working directory must be the root of the kernel src.
@@ -291,7 +301,7 @@ ifeq ($(MAKECMDGOALS),)
 endif
 
 export KBUILD_MODULES KBUILD_BUILTIN
-export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD
+export KBUILD_CHECKSRC KBUILD_SRC KBUILD_EXTMOD KBUILD_KABIPARSER
 
 # Beautify output
 # ---------------------------------------------------------------------------
@@ -358,6 +368,7 @@ INSTALLKERNEL  := installkernel
 DEPMOD		= /sbin/depmod
 PERL		= perl
 CHECK		= sparse
+KABIPARSER 	= $(shell if [ -x "/usr/sbin/kabi-parser" ]; then echo kabi-parser; fi)
 
 CHECKFLAGS     := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ \
 		  -Wbitwise -Wno-return-void $(CF)
@@ -422,7 +433,7 @@ KERNELVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(S
 export VERSION PATCHLEVEL SUBLEVEL KERNELRELEASE KERNELVERSION
 export ARCH SRCARCH CONFIG_SHELL HOSTCC HOSTCFLAGS CROSS_COMPILE AS LD CC
 export CPP AR NM STRIP OBJCOPY OBJDUMP
-export MAKE AWK GENKSYMS INSTALLKERNEL PERL UTS_MACHINE
+export MAKE AWK GENKSYMS INSTALLKERNEL PERL UTS_MACHINE KABIPARSER
 export HOSTCXX HOSTCXXFLAGS LDFLAGS_MODULE CHECK CHECKFLAGS
 
 export KBUILD_CPPFLAGS NOSTDINC_FLAGS LINUXINCLUDE OBJCOPYFLAGS LDFLAGS
@@ -1252,6 +1263,7 @@ help:
 	@echo  '		2: warnings which occur quite often but may still be relevant'
 	@echo  '		3: more obscure warnings, can most likely be ignored'
 	@echo  '		Multiple levels can be combined with W=12 or W=123'
+	@echo  '  make K=1   [targets] Build kabitools database.'
 	@echo  ''
 	@echo  'Execute "make" or "make all" to build all targets marked with [*] '
 	@echo  'For further info see the ./README file'
@@ -1365,6 +1377,7 @@ clean: $(clean-dirs)
 		-o -name '.*.d' -o -name '.*.tmp' -o -name '*.mod.c' \
 		-o -name '*.symtypes' -o -name 'modules.order' \
 		-o -name modules.builtin -o -name '.tmp_*.o.*' \
+		-o -name '*.i' -o -name '*.kbg' -o -name 'kabi-datafiles.*' \
 		-o -name '*.gcno' \) -type f -print | xargs rm -f
 
 # Generate tags for editors
diff --git a/redhat/.gitignore b/redhat/.gitignore
index 6ea9051..53805ec9 100644
--- a/redhat/.gitignore
+++ b/redhat/.gitignore
@@ -15,3 +15,4 @@ kabi/Module.kabi_dup_x86_64
 kabi/kabi-current
 kabi/kabi-rhel7?
 kabi/kabi-rhel7?/*
+kabi/kabi-datafiles.list
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index 2fdc215..476ef25 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -30,6 +30,9 @@ ldflags-y  :=
 subdir-asflags-y :=
 subdir-ccflags-y :=
 
+KABIDATADIR	= redhat/kabi
+KABIDATAFILE	= $(KABIDATADIR)/kabi-datafiles.list
+
 # Read auto.conf if it exists, otherwise ignore
 -include include/config/auto.conf
 
@@ -209,6 +212,16 @@ cmd_cpp_i_c       = $(CPP) $(c_flags) -o $@ $<
 $(obj)/%.i: $(src)/%.c FORCE
 	$(call if_changed_dep,cpp_i_c)
 
+ifeq ($(KBUILD_KABIPARSER),1)
+    cmd_kabiparser = 					\
+	$(CPP) $(c_flags) -o $(1) $<;			\
+	$(KABIPARSER) -xo $(2) -f $(1) -S -Wall_off;	\
+	test -e $(2) && echo $(2) >> $(KABIDATAFILE);	\
+	rm -f $(1);
+else
+    cmd_kabiparser = echo -n;
+endif
+
 cmd_gensymtypes =                                                           \
     $(CPP) -D__GENKSYMS__ $(c_flags) $< |                                   \
     $(GENKSYMS) $(if $(1), -T $(2))                                         \
@@ -253,6 +266,10 @@ cmd_modversions =								\
 		$(call cmd_gensymtypes,$(KBUILD_SYMTYPES),$(@:.o=.symtypes))	\
 		    > $(@D)/.tmp_$(@F:.o=.ver);					\
 										\
+		if [ "$(KABIPARSER)" ]; then					\
+			$(call cmd_kabiparser,$(@:.o=.i),$(@:.o=.kbg))	\
+		fi;								\
+										\
 		$(LD) $(LDFLAGS) -r -o $@ $(@D)/.tmp_$(@F) 			\
 			-T $(@D)/.tmp_$(@F:.o=.ver);				\
 		rm -f $(@D)/.tmp_$(@F) $(@D)/.tmp_$(@F:.o=.ver);		\
-- 
1.8.3.1

